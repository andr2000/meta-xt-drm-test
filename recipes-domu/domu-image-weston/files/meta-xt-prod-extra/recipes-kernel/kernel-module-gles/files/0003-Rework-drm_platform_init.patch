From 0c230cf35bb52bde95558b0c36d0ac7e01f1d50c Mon Sep 17 00:00:00 2001
From: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date: Thu, 25 Jan 2018 11:25:18 +0200
Subject: [PATCH 3/4] Rework drm_platform_init

Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
---
 include/drm/pvr_drm.h                            |  4 ++++
 kernel/drivers/staging/imgtec/pvr_drm.c          | 11 ++++++++++-
 kernel/drivers/staging/imgtec/pvr_platform_drv.c | 25 ++++++++++++++++++++++++
 3 files changed, 39 insertions(+), 1 deletion(-)

diff --git a/include/drm/pvr_drm.h b/include/drm/pvr_drm.h
index abba65aa6f36..75b9948ddca7 100644
--- a/include/drm/pvr_drm.h
+++ b/include/drm/pvr_drm.h
@@ -96,4 +96,8 @@ struct drm_pvr_dbgdrv_cmd {
 #define	DRM_IOCTL_PVR_SRVKM_CMD		DRM_IOWR(DRM_COMMAND_BASE + DRM_PVR_SRVKM_CMD, struct drm_pvr_srvkm_cmd)
 #define	DRM_IOCTL_PVR_DBGDRV_CMD	DRM_IOWR(DRM_COMMAND_BASE + DRM_PVR_DBGDRV_CMD, struct drm_pvr_dbgdrv_cmd)
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0))
+int pvr_drm_load(struct drm_device *ddev, unsigned long flags);
+#endif
+
 #endif /* defined(__PVR_DRM_H__) */
diff --git a/kernel/drivers/staging/imgtec/pvr_drm.c b/kernel/drivers/staging/imgtec/pvr_drm.c
index 6561f585f2be..b0ff680d7524 100644
--- a/kernel/drivers/staging/imgtec/pvr_drm.c
+++ b/kernel/drivers/staging/imgtec/pvr_drm.c
@@ -93,7 +93,10 @@ const struct dev_pm_ops pvr_pm_ops = {
 };
 
 
-static int pvr_drm_load(struct drm_device *ddev, unsigned long flags)
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 12, 0))
+static
+#endif
+int pvr_drm_load(struct drm_device *ddev, unsigned long flags)
 {
 	struct _PVRSRV_DEVICE_NODE_ *dev_node;
 	enum PVRSRV_ERROR srv_err;
@@ -101,12 +104,14 @@ static int pvr_drm_load(struct drm_device *ddev, unsigned long flags)
 
 	DRM_DEBUG_DRIVER("device %p\n", ddev->dev);
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 12, 0))
 	/*
 	 * The equivalent is done for PCI modesetting drivers by
 	 * drm_get_pci_dev()
 	 */
 	if (ddev->platformdev)
 		platform_set_drvdata(ddev->platformdev, ddev);
+#endif
 
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 12, 0))
 	/* older kernels do not have render drm_minor member in drm_device,
@@ -148,6 +153,7 @@ err_exit:
 	return err;
 }
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 12, 0))
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0))
 static int pvr_drm_unload(struct drm_device *ddev)
 #else
@@ -167,6 +173,7 @@ static void pvr_drm_unload(struct drm_device *ddev)
 	return 0;
 #endif
 }
+#endif
 
 static int pvr_drm_open(struct drm_device *ddev, struct drm_file *dfile)
 {
@@ -259,8 +266,10 @@ const struct drm_driver pvr_drm_generic_driver = {
 	.driver_features	= DRIVER_MODESET | DRIVER_RENDER,
 
 	.dev_priv_size		= 0,
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 12, 0))
 	.load			= pvr_drm_load,
 	.unload			= pvr_drm_unload,
+#endif
 	.open			= pvr_drm_open,
 	.postclose		= pvr_drm_release,
 
diff --git a/kernel/drivers/staging/imgtec/pvr_platform_drv.c b/kernel/drivers/staging/imgtec/pvr_platform_drv.c
index fea606eb11fc..6e36b94be0d8 100644
--- a/kernel/drivers/staging/imgtec/pvr_platform_drv.c
+++ b/kernel/drivers/staging/imgtec/pvr_platform_drv.c
@@ -50,6 +50,9 @@ CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 #include "module_common.h"
 #include "pvr_drv.h"
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0))
+#include "pvr_drm.h"
+#endif
 #include "pvrmodule.h"
 #include "sysinfo.h"
 
@@ -149,9 +152,31 @@ static void pvr_devices_unregister(void)
 
 static int pvr_probe(struct platform_device *pdev)
 {
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0))
+	struct drm_device *drm;
+	int result;
+#endif
+
 	DRM_DEBUG_DRIVER("device %p\n", &pdev->dev);
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 12, 0))
 	return drm_platform_init(&pvr_drm_platform_driver, pdev);
+#else
+	drm = drm_dev_alloc(&pvr_drm_platform_driver, &pdev->dev);
+	if (IS_ERR(drm))
+		return PTR_ERR(drm);
+
+	platform_set_drvdata(pdev, drm);
+
+	result = pvr_drm_load(drm, 0);
+
+	if (result)
+		return result;
+
+	result = drm_dev_register(drm, 0);
+
+	return result;
+#endif
 }
 
 static int pvr_remove(struct platform_device *pdev)
-- 
2.7.4

